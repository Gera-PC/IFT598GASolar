# Generated by Django 2.0.5 on 2019-04-18 18:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.CharField(max_length=50)),
                ('issue_date', models.DateField()),
                ('model_number', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_ID', models.CharField(max_length=10, unique=True)),
                ('client_name', models.CharField(max_length=40)),
                ('client_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_ID', models.CharField(max_length=10, unique=True)),
                ('address1', models.CharField(max_length=50)),
                ('address2', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('postal_code', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=50)),
                ('fax_number', models.CharField(max_length=50)),
                ('client_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client', to_field='client_ID')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_system_voltage', models.CharField(max_length=50)),
                ('voc', models.CharField(max_length=50)),
                ('isc', models.CharField(max_length=50)),
                ('vmp', models.CharField(max_length=50)),
                ('imp', models.CharField(max_length=50)),
                ('pmp', models.CharField(max_length=50)),
                ('ff', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_number', models.CharField(max_length=50, unique=True)),
                ('product_name', models.CharField(max_length=50)),
                ('cell_technology', models.CharField(max_length=50)),
                ('cell_manufacturer', models.CharField(max_length=50)),
                ('number_of_cells', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_cells_in_series', models.PositiveIntegerField(blank=True, null=True)),
                ('number_of_series_strings', models.PositiveIntegerField(blank=True, null=True)),
                ('number_diodes', models.PositiveIntegerField(blank=True, null=True)),
                ('product_length', models.FloatField(blank=True, null=True)),
                ('product_width', models.FloatField(blank=True, null=True)),
                ('product_weight', models.FloatField(blank=True, null=True)),
                ('superstate_type', models.CharField(max_length=50)),
                ('superstate_manufacturer', models.CharField(max_length=50)),
                ('substrate_type', models.CharField(max_length=50)),
                ('substrate_manufacturer', models.CharField(max_length=50)),
                ('frame_type', models.CharField(max_length=50)),
                ('frame_adhesive', models.CharField(max_length=50)),
                ('encapsulate_type', models.CharField(max_length=50)),
                ('encapsulate_manufacturer', models.CharField(max_length=50)),
                ('junction_box_type', models.CharField(max_length=50)),
                ('junction_box_manufacturer', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_ID', models.CharField(max_length=10)),
                ('service_name', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=500)),
                ('is_FI_required', models.BooleanField(default=False)),
                ('FI_frequency', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TestSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_ID', models.CharField(max_length=10, unique=True)),
                ('sequence', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TestStandard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_ID', models.CharField(max_length=10, unique=True)),
                ('standard_name', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=500)),
                ('published_date', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('job_title', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('office_phone', models.CharField(max_length=50)),
                ('cell_phone', models.CharField(max_length=50)),
                ('prefix', models.CharField(max_length=50)),
                ('client_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Client', to_field='client_ID')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='standard_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.TestStandard', to_field='standard_ID'),
        ),
        migrations.AddField(
            model_name='performancedate',
            name='model_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Product', to_field='model_number'),
        ),
        migrations.AddField(
            model_name='performancedate',
            name='sequence_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.TestSequence', to_field='sequence_ID'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='certificate_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Product', to_field='model_number'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='location_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Location', to_field='location_ID'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='standard_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.TestStandard', to_field='standard_ID'),
        ),
    ]
